{"ast":null,"code":"import React,{useEffect,useState}from'react';import{TaskProvider,useTaskContext}from'../../context/TaskContext';import{SelectedTaskProvider,useSelectedTaskContext}from'../../context/SelectedTaskContext';import NewTaskButton from'../NewTaskButton';import TableBody from'../TableBody';import TableTitle from'../TableTitle/TableTitle';import'./TableTask.css';import NewTaskField from'../NewTaskField';import TaskModal from'../TaskModal';import fetchTasks from'../../services/taskService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const TableTask=()=>{const{tasks,setTasks}=useTaskContext();const{selectedTask,setSelectedTask}=useSelectedTaskContext();const[isNewTaskFieldPresent,setIsNewTaskFieldPresent]=useState(false);useEffect(()=>{const fetchAndSetTasks=async()=>{const tasksData=await fetchTasks();setTasks(tasksData);};fetchAndSetTasks();},[setTasks]);const handleEnter=event=>{if(event.key!=='Enter')return;setTasks([...tasks,{title:event.target.value,createdAt:'',finishedAt:'',owner:'',priority:''}]);setIsNewTaskFieldPresent(false);};const addNewTask=()=>{if(!isNewTaskFieldPresent){setIsNewTaskFieldPresent(true);const newTask={field:/*#__PURE__*/_jsx(NewTaskField,{onKeyDown:handleEnter}),isNewTask:true};setSelectedTask(newTask);}};const handleTaskClick=task=>{if(!task.isNewTask){setSelectedTask(task);}};const closeModal=()=>{setIsNewTaskFieldPresent(false);setSelectedTask(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"tableHead\",children:[/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(TableTitle,{}),/*#__PURE__*/_jsx(TableBody,{rows:tasks,onClick:handleTaskClick}),isNewTaskFieldPresent&&/*#__PURE__*/_jsx(\"tr\",{className:\"newTaskField\",children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"5\",children:selectedTask.field})}),/*#__PURE__*/_jsx(NewTaskButton,{onClick:addNewTask})]}),selectedTask&&!selectedTask.isNewTask&&!isNewTaskFieldPresent&&/*#__PURE__*/_jsx(TaskModal,{task:selectedTask,onCloseButtonClick:closeModal})]});};const WrappedTableTask=()=>{return/*#__PURE__*/_jsx(TaskProvider,{children:/*#__PURE__*/_jsx(SelectedTaskProvider,{children:/*#__PURE__*/_jsx(TableTask,{})})});};export default WrappedTableTask;","map":{"version":3,"names":["React","useEffect","useState","TaskProvider","useTaskContext","SelectedTaskProvider","useSelectedTaskContext","NewTaskButton","TableBody","TableTitle","NewTaskField","TaskModal","fetchTasks","jsx","_jsx","jsxs","_jsxs","TableTask","tasks","setTasks","selectedTask","setSelectedTask","isNewTaskFieldPresent","setIsNewTaskFieldPresent","fetchAndSetTasks","tasksData","handleEnter","event","key","title","target","value","createdAt","finishedAt","owner","priority","addNewTask","newTask","field","onKeyDown","isNewTask","handleTaskClick","task","closeModal","className","children","rows","onClick","colSpan","onCloseButtonClick","WrappedTableTask"],"sources":["/home/guilherme/workspace/backend/frontend/src/components/TableTask/TableTask.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TaskProvider, useTaskContext } from '../../context/TaskContext';\nimport { SelectedTaskProvider, useSelectedTaskContext } from '../../context/SelectedTaskContext';\nimport NewTaskButton from '../NewTaskButton';\nimport TableBody from '../TableBody';\nimport TableTitle from '../TableTitle/TableTitle';\nimport './TableTask.css';\nimport NewTaskField from '../NewTaskField';\nimport TaskModal from '../TaskModal';\nimport fetchTasks from '../../services/taskService';\n\nconst TableTask = () => {\n  const { tasks, setTasks } = useTaskContext();\n  const { selectedTask, setSelectedTask } = useSelectedTaskContext();\n  const [isNewTaskFieldPresent, setIsNewTaskFieldPresent] = useState(false);\n\n  useEffect(() => {\n    const fetchAndSetTasks = async () => {\n      const tasksData = await fetchTasks();\n      setTasks(tasksData);\n    };\n\n    fetchAndSetTasks();\n  }, [setTasks]);\n\n  const handleEnter = (event) => {\n    if (event.key !== 'Enter') return;\n    setTasks([...tasks, { title: event.target.value, createdAt: '', finishedAt: '', owner: '', priority: '' }]);\n    setIsNewTaskFieldPresent(false);\n  };\n\n  const addNewTask = () => {\n    if (!isNewTaskFieldPresent) {\n      setIsNewTaskFieldPresent(true);\n      const newTask = { field: <NewTaskField onKeyDown={handleEnter} />, isNewTask: true };\n      setSelectedTask(newTask);\n    }\n  };\n\n  const handleTaskClick = (task) => {\n    if (!task.isNewTask) {\n      setSelectedTask(task);\n    }\n  };\n\n  const closeModal = () => {\n    setIsNewTaskFieldPresent(false);\n    setSelectedTask(null);\n  };\n\n  return (\n    <div className='tableHead'>\n      <table>\n        <TableTitle />\n        <TableBody rows={tasks} onClick={handleTaskClick} />\n        {isNewTaskFieldPresent && (\n          <tr className='newTaskField'>\n            <td colSpan=\"5\">{selectedTask.field}</td>\n          </tr>\n        )}\n        <NewTaskButton onClick={addNewTask} />\n      </table>\n\n      {selectedTask && !selectedTask.isNewTask && !isNewTaskFieldPresent && (\n        <TaskModal task={selectedTask} onCloseButtonClick={closeModal} />\n      )}\n\n    </div>\n  );\n};\n\nconst WrappedTableTask = () => {\n  return (\n    <TaskProvider>\n      <SelectedTaskProvider>\n        <TableTask />\n      </SelectedTaskProvider>\n    </TaskProvider>\n  );\n};\n\nexport default WrappedTableTask;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}